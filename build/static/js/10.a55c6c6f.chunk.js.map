{"version":3,"sources":["components/title/title.js","components/pagination/pagination.js","components/menu/productsMenu.js","components/fancyBox/fancyBox.js","pages/productsOur.js"],"names":["Title","title","className","React","memo","CustomPagination","total","defaultCurrent","pageSize","setPage","onChange","e","showSizeChanger","showLessItems","ProductsMenu","data","type","pathname","useLocation","searchRef","useRef","allSpan","filter","closeBtnForFilter","t","useTranslation","useEffect","searchSpan","current","onclick","document","querySelector","style","display","ref","width","height","viewBox","fill","xmlns","d","stroke","to","placeholder","undefined","dryFood","map","item","slug","split","length","toUpperCase","id","onClick","forEach","element","classList","remove","target","add","confectionery","noRender","prev","next","Fancybox","props","delegate","opts","options","NativeFancybox","bind","destroy","children","Products","useState","page","totalRef","useParams","useQuery","ourBrands","refetchOnWindowFocus","onSuccess","succ","meta","isLoading","infinite","index","lg","thumbnail","image","galleryImage","weight","packaging","code","per_page"],"mappings":"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","file":"static/js/10.a55c6c6f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <div className=\"layerTitle\">\r\n      <h1>{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default React.memo(Title);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Pagination } from \"antd\";\r\n\r\nconst CustomPagination = ({ total, defaultCurrent, pageSize, setPage }) => {\r\n  return (\r\n    <Pagination\r\n      onChange={(e) => setPage(e)}\r\n      showSizeChanger={false}\r\n      showLessItems={false}\r\n      pageSize={pageSize}\r\n      defaultCurrent={defaultCurrent}\r\n      total={total}\r\n    />\r\n  );\r\n};\r\n\r\nCustomPagination.propTypes = {\r\n  setPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(CustomPagination);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link, NavLink, useLocation } from \"react-router-dom\";\r\nimport { searchSpan } from \"../../helper/helper\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// css\r\nimport \"../../assets/css/_menu.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ProductsMenu = ({ data, type }) => {\r\n  const { pathname } = useLocation();\r\n  const searchRef = useRef([]);\r\n  const allSpan = useRef([]);\r\n  const filter = useRef(null);\r\n  const closeBtnForFilter = useRef(null);\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    searchSpan(searchRef);\r\n\r\n    filter.current.onclick = () => {\r\n      document.querySelector(\".menuProduct\").style.display = \"flex\";\r\n    };\r\n\r\n    closeBtnForFilter.current.onclick = () => {\r\n      document.querySelector(\".menuProduct\").style.display = \"none\";\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filterBox\" ref={filter}>\r\n        <button>\r\n          <svg\r\n            width=\"25\"\r\n            height=\"25\"\r\n            viewBox=\"0 0 25 25\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M10.8301 17.0928H4.52942\"\r\n              stroke=\"white\"\r\n              stroke-width=\"1.5\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M13.6405 7.40042H19.9412\"\r\n              stroke=\"white\"\r\n              stroke-width=\"1.5\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              clip-rule=\"evenodd\"\r\n              d=\"M9.22629 7.34625C9.22629 6.0506 8.16813 5 6.86314 5C5.55816 5 4.5 6.0506 4.5 7.34625C4.5 8.64191 5.55816 9.69251 6.86314 9.69251C8.16813 9.69251 9.22629 8.64191 9.22629 7.34625Z\"\r\n              stroke=\"white\"\r\n              stroke-width=\"1.5\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              clip-rule=\"evenodd\"\r\n              d=\"M20.5 17.0538C20.5 15.7581 19.4426 14.7075 18.1376 14.7075C16.8318 14.7075 15.7737 15.7581 15.7737 17.0538C15.7737 18.3494 16.8318 19.4 18.1376 19.4C19.4426 19.4 20.5 18.3494 20.5 17.0538Z\"\r\n              stroke=\"white\"\r\n              stroke-width=\"1.5\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n            />\r\n          </svg>\r\n          Filter\r\n        </button>\r\n      </div>\r\n      <div className=\"menu menuProduct\">\r\n        <NavLink to={\"/our-products\"}>{t(\"bizimmarkalar\")}</NavLink>\r\n        <NavLink to={\"/external-products\"}>{t(\"xaricimarkalar\")}</NavLink>\r\n        <div className=\"menu__details\">\r\n          <div className=\"menu__details--title\">\r\n            <button ref={closeBtnForFilter}>\r\n              <svg\r\n                width={8}\r\n                height={15}\r\n                viewBox=\"0 0 8 15\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M7.79325 0.212584C8.04386 0.470261 8.06664 0.873484 7.8616 1.15762L7.79325 1.23903L1.70447 7.5L7.79325 13.761C8.04386 14.0186 8.06664 14.4219 7.8616 14.706L7.79325 14.7874C7.54265 15.0451 7.15049 15.0685 6.87415 14.8577L6.79498 14.7874L0.206749 8.01322C-0.0438556 7.75554 -0.0666379 7.35232 0.138402 7.06818L0.206749 6.98678L6.79498 0.212584C7.07065 -0.0708613 7.51759 -0.0708613 7.79325 0.212584Z\"\r\n                  fill=\"black\"\r\n                />\r\n              </svg>\r\n            </button>\r\n            <h5>Filter</h5>\r\n            <span></span>\r\n          </div>\r\n          <div className=\"menu__details--item\">\r\n            <div className=\"menu__detailsSearch\">\r\n              <input\r\n                ref={(e) => (searchRef.current[0] = e)}\r\n                type=\"search\"\r\n                placeholder={`${t(\"quruqidaaxtar\")}...`}\r\n              />\r\n              <svg\r\n                width=\"17\"\r\n                height=\"17\"\r\n                viewBox=\"0 0 17 17\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M12.1498 10.6918H11.3819L11.1098 10.4294C12.0623 9.32133 12.6358 7.88279 12.6358 6.3179C12.6358 2.82847 9.80732 0 6.3179 0C2.82847 0 0 2.82847 0 6.3179C0 9.80732 2.82847 12.6358 6.3179 12.6358C7.88279 12.6358 9.32133 12.0623 10.4294 11.1098L10.6918 11.3819V12.1498L15.5517 17L17 15.5517L12.1498 10.6918ZM6.3179 10.6918C3.89766 10.6918 1.94397 8.73814 1.94397 6.3179C1.94397 3.89766 3.89766 1.94397 6.3179 1.94397C8.73814 1.94397 10.6918 3.89766 10.6918 6.3179C10.6918 8.73814 8.73814 10.6918 6.3179 10.6918Z\"\r\n                  fill=\"#C4C4C4\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"parent\">\r\n              {data !== undefined &&\r\n                data.dryFood.map((item) => (\r\n                  <Link to={`/${type}/${item.slug}`} key={item.id}>\r\n                    <span\r\n                      className={\r\n                        pathname\r\n                          .split(\"/\")\r\n                          [pathname.split(\"/\").length - 1].toUpperCase() ==\r\n                        item.title.toUpperCase()\r\n                          ? \"activeSpan\"\r\n                          : \"\"\r\n                      }\r\n                      ref={(e) => (allSpan.current[item.id] = e)}\r\n                      onClick={(e) => {\r\n                        allSpan.current.forEach((element) => {\r\n                          element.classList.remove(\"activeSpan\");\r\n                        });\r\n                        e.target.classList.add(\"activeSpan\");\r\n                      }}\r\n                    >\r\n                      {item.title}\r\n                    </span>\r\n                  </Link>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"menu__details--item\">\r\n            <div className=\"menu__detailsSearch\">\r\n              <input\r\n                ref={(e) => (searchRef.current[1] = e)}\r\n                type=\"search\"\r\n                placeholder={`${t(\"qennadiaxtar\")}...`}\r\n              />\r\n              <svg\r\n                width=\"17\"\r\n                height=\"17\"\r\n                viewBox=\"0 0 17 17\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M12.1498 10.6918H11.3819L11.1098 10.4294C12.0623 9.32133 12.6358 7.88279 12.6358 6.3179C12.6358 2.82847 9.80732 0 6.3179 0C2.82847 0 0 2.82847 0 6.3179C0 9.80732 2.82847 12.6358 6.3179 12.6358C7.88279 12.6358 9.32133 12.0623 10.4294 11.1098L10.6918 11.3819V12.1498L15.5517 17L17 15.5517L12.1498 10.6918ZM6.3179 10.6918C3.89766 10.6918 1.94397 8.73814 1.94397 6.3179C1.94397 3.89766 3.89766 1.94397 6.3179 1.94397C8.73814 1.94397 10.6918 3.89766 10.6918 6.3179C10.6918 8.73814 8.73814 10.6918 6.3179 10.6918Z\"\r\n                  fill=\"#C4C4C4\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"parent\">\r\n              {data !== undefined &&\r\n                data.confectionery.map((item) => (\r\n                  <Link to={`/${type}/${item.slug}`} key={item.id}>\r\n                    <span\r\n                      className={\r\n                        pathname\r\n                          .split(\"/\")\r\n                          [pathname.split(\"/\").length - 1].toUpperCase() ==\r\n                        item.title.toUpperCase()\r\n                          ? \"activeSpan\"\r\n                          : \"\"\r\n                      }\r\n                      ref={(e) => (allSpan.current[item.id] = e)}\r\n                      onClick={(e) => {\r\n                        allSpan.current.forEach((element) => {\r\n                          element.classList.remove(\"activeSpan\");\r\n                        });\r\n                        e.target.classList.add(\"activeSpan\");\r\n                      }}\r\n                    >\r\n                      {item.title}\r\n                    </span>\r\n                  </Link>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <button className=\"menu__details--btnForFilter\">\r\n            {t(\"tetbiqet\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nProductsMenu.propTypes = {\r\n  data: PropTypes.object,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nfunction noRender(prev, next) {\r\n  if (next.data === undefined) {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default React.memo(ProductsMenu, noRender);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { Fancybox as NativeFancybox } from \"@fancyapps/ui/dist/fancybox.esm.js\";\r\nimport \"@fancyapps/ui/dist/fancybox.css\";\r\n\r\nfunction Fancybox(props) {\r\n  const delegate = props.delegate || \"[data-fancybox]\";\r\n\r\n  useEffect(() => {\r\n    const opts = props.options || {};\r\n\r\n    NativeFancybox.bind(delegate, opts);\r\n\r\n    return () => {\r\n      NativeFancybox.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return <>{props.children}</>;\r\n}\r\n\r\nexport default Fancybox;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Row, Col, Container } from \"reactstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Title from \"../components/title/title\";\r\nimport ProductsMenu from \"../components/menu/productsMenu\";\r\nimport CustomPagination from \"../components/pagination/pagination\";\r\nimport FancyBox from \"../components/fancyBox/fancyBox\";\r\nimport { useQuery } from \"react-query\";\r\nimport { ourBrands } from \"../queries/queries\";\r\nimport ReactFancyBox from \"react-fancybox\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// css\r\nimport \"react-fancybox/lib/fancybox.css\";\r\nimport \"../assets/css/_products.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Products = () => {\r\n  const [page, setPage] = useState(0);\r\n  const totalRef = useRef(null);\r\n  const { slug } = useParams();\r\n  const { t } = useTranslation();\r\n\r\n  const { data, isLoading } = useQuery(\r\n    [\"ourBrands\", slug !== undefined ? \"/\" + slug : \"\", page],\r\n    ourBrands,\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      onSuccess: function (succ) {\r\n        totalRef.current = succ.meta;\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"products\">\r\n      <Title title={t(\"mehsullar\")} />\r\n      <Container>\r\n        <FancyBox options={{ infinite: false }}>\r\n          <div className=\"products__wrapper\">\r\n            <ProductsMenu type=\"our-products\" data={data} />\r\n            <div className=\"products__info\">\r\n              <Row>\r\n                {isLoading === false &&\r\n                  data !== undefined &&\r\n                  data.data.map((item, index) => (\r\n                    <Col lg=\"4\" key={index}>\r\n                      <div className=\"productSlider__items\">\r\n                        <div className=\"productSlider__items--img\">\r\n                          <ReactFancyBox\r\n                            thumbnail={item.image}\r\n                            image={item.galleryImage}\r\n                          />\r\n                        </div>\r\n                        <div className=\"productSlider__items--info\">\r\n                          <Link to={`/products-detail/${item.slug}`}>\r\n                            <h2>{item.title}</h2>\r\n                          </Link>\r\n                          <p>\r\n                            <span>{t(\"ceki\")} </span>\r\n                            <span>{item.weight}</span>\r\n                          </p>\r\n                          <p>\r\n                            <span>{t(\"qablasdirma\")} </span>\r\n                            <span>{item.packaging}</span>\r\n                          </p>\r\n                          <p>\r\n                            <span>{t(\"kod\")} </span>\r\n                            <span>{item.code}</span>\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  ))}\r\n              </Row>\r\n              <div className=\"d-flex justify-content-center\">\r\n                {totalRef.current !== null &&\r\n                  totalRef.current.total > totalRef.current.per_page && (\r\n                    <CustomPagination\r\n                      defaultCurrent={1}\r\n                      total={totalRef.current.total}\r\n                      pageSize={totalRef.current.per_page}\r\n                      setPage={setPage}\r\n                    />\r\n                  )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </FancyBox>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"sourceRoot":""}