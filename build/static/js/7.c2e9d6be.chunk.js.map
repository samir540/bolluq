{"version":3,"sources":["components/title/title.js","components/pagination/pagination.js","components/menu/humanResurcesMenu.js","assets/images/arrow.svg","assets/images/calendar.svg","assets/images/mapIcon.svg","pages/vacancies.js"],"names":["Title","title","className","React","memo","CustomPagination","total","defaultCurrent","pageSize","setPage","onChange","e","showSizeChanger","showLessItems","HumanResurcesMenu","t","useTranslation","to","Vacancies","useState","number","setNumber","totalRef","useRef","position","occupation","params","setParams","btnRef","useQuery","vacanciesApi","refetchOnWindowFocus","onSuccess","succ","current","meta","data","isLoading","refetch","vacancyFilter","vacanciesFilter","useCallback","useEffect","forEach","elem","onclick","nextElementSibling","classList","contains","remove","add","type","placeholder","width","height","viewBox","fill","xmlns","d","ref","undefined","positions","map","item","htmlFor","id","onClick","target","checked","prev","index","indexOf","splice","occupations","company","src","require","default","alt","location","expired_at","slug","per_page"],"mappings":"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","file":"static/js/7.c2e9d6be.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <div className=\"layerTitle\">\r\n      <h1>{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default React.memo(Title);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Pagination } from \"antd\";\r\n\r\nconst CustomPagination = ({ total, defaultCurrent, pageSize, setPage }) => {\r\n  return (\r\n    <Pagination\r\n      onChange={(e) => setPage(e)}\r\n      showSizeChanger={false}\r\n      showLessItems={false}\r\n      pageSize={pageSize}\r\n      defaultCurrent={defaultCurrent}\r\n      total={total}\r\n    />\r\n  );\r\n};\r\n\r\nCustomPagination.propTypes = {\r\n  setPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(CustomPagination);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// css\r\nimport \"../../assets/css/_menu.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst HumanResurcesMenu = () => {\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"menu menuCommon menuHuman\">\r\n      <NavLink to={\"/internship\"}>{t(\"tecrubeproqramlari\")}</NavLink>\r\n      <NavLink to={\"/rules\"}>{t(\"isemuracietqaydalari\")}</NavLink>\r\n      <NavLink to={\"/vacancies\"}>{t(\"vakansiyalar\")}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(HumanResurcesMenu);\r\n","export default __webpack_public_path__ + \"static/media/arrow.5e1ee2ef.svg\";","export default __webpack_public_path__ + \"static/media/calendar.edb75364.svg\";","export default __webpack_public_path__ + \"static/media/mapIcon.1353b2eb.svg\";","import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport HRMenu from \"../components/menu/humanResurcesMenu\";\r\nimport CustomPagination from \"../components/pagination/pagination\";\r\n// css\r\nimport \"../assets/css/_vacancies.scss\";\r\nimport Title from \"../components/title/title\";\r\nimport { useQuery } from \"react-query\";\r\nimport { vacanciesApi, vacanciesFilter } from \"../queries/queries\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nconst Vacancies = () => {\r\n  const { t } = useTranslation();\r\n  const [number, setNumber] = useState(0);\r\n  const totalRef = useRef(null);\r\n  const [params, setParams] = useState({\r\n    position: [],\r\n    occupation: [],\r\n  });\r\n  const btnRef = useRef([]);\r\n  const { data, isLoading, refetch } = useQuery(\r\n    [\"vacanciesAll\", params, number],\r\n    vacanciesApi,\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      onSuccess: function (succ) {\r\n        totalRef.current = succ.meta;\r\n      },\r\n    }\r\n  );\r\n\r\n  const vacancyFilter = useQuery([\"vacancyFilter\"], vacanciesFilter, {\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  const setPage = useCallback((e) => {\r\n    setNumber(e);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    btnRef.current.forEach((elem) => {\r\n      elem.onclick = function () {\r\n        if (elem.nextElementSibling.classList.contains(\"hideElem\")) {\r\n          elem.nextElementSibling.classList.remove(\"hideElem\");\r\n        } else {\r\n          elem.nextElementSibling.classList.add(\"hideElem\");\r\n        }\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"vacancies\">\r\n      <Title title={t(\"insanresurslari\")} />\r\n      <Container>\r\n        <div className=\"d-flex align-items-baseline vacancies__wrapper\">\r\n          <div className=\"vacancies__menuBox\">\r\n            <HRMenu />\r\n            <div className=\"menu__details\">\r\n              <div className=\"menu__details--item\">\r\n                <div className=\"menu__detailsSearch vacancies__searchBox\">\r\n                  <input type=\"search\" placeholder={t(\"axtar\")} />\r\n                  <svg\r\n                    width=\"17\"\r\n                    height=\"17\"\r\n                    viewBox=\"0 0 17 17\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M12.1498 10.6918H11.3819L11.1098 10.4294C12.0623 9.32133 12.6358 7.88279 12.6358 6.3179C12.6358 2.82847 9.80732 0 6.3179 0C2.82847 0 0 2.82847 0 6.3179C0 9.80732 2.82847 12.6358 6.3179 12.6358C7.88279 12.6358 9.32133 12.0623 10.4294 11.1098L10.6918 11.3819V12.1498L15.5517 17L17 15.5517L12.1498 10.6918ZM6.3179 10.6918C3.89766 10.6918 1.94397 8.73814 1.94397 6.3179C1.94397 3.89766 3.89766 1.94397 6.3179 1.94397C8.73814 1.94397 10.6918 3.89766 10.6918 6.3179C10.6918 8.73814 8.73814 10.6918 6.3179 10.6918Z\"\r\n                      fill=\"#C4C4C4\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"parent\">\r\n                  <div className=\"parent__info\">\r\n                    <button ref={(e) => (btnRef.current[0] = e)}>\r\n                      {t(\"vezife\")}\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M3.72407 6.64131C3.94596 6.41942 4.29318 6.39925 4.53786 6.5808L4.60796 6.64131L9.99935 12.0324L15.3907 6.64131C15.6126 6.41942 15.9598 6.39925 16.2045 6.58079L16.2746 6.64131C16.4965 6.8632 16.5167 7.21042 16.3351 7.45509L16.2746 7.52519L10.4413 13.3585C10.2194 13.5804 9.87218 13.6006 9.62751 13.419L9.55741 13.3585L3.72407 7.52519C3.48 7.28112 3.48 6.88539 3.72407 6.64131Z\"\r\n                          fill=\"black\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                    <div className=\"hideElem\">\r\n                      {vacancyFilter.isLoading === false &&\r\n                        vacancyFilter.data !== undefined &&\r\n                        vacancyFilter.data.positions.map((item) => (\r\n                          <p className=\"parent__checkBox\" key={item.id}>\r\n                            <label htmlFor={item.title}>\r\n                              <input\r\n                                id={item.title}\r\n                                type=\"checkbox\"\r\n                                onClick={(e) => {\r\n                                  if (e.target.checked === true) {\r\n                                    setParams((prev) => ({\r\n                                      ...prev,\r\n                                      position: [...params.position, item.id],\r\n                                    }));\r\n                                  } else {\r\n                                    const index = params.position.indexOf(\r\n                                      item.id,\r\n                                      0\r\n                                    );\r\n                                    if (index > -1) {\r\n                                      params.position.splice(index, 1);\r\n                                      setParams(params);\r\n                                      refetch();\r\n                                    }\r\n                                  }\r\n                                }}\r\n                              />\r\n                              {item.title}\r\n                            </label>\r\n                          </p>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"parent__info\">\r\n                    <button ref={(e) => (btnRef.current[1] = e)}>\r\n                      {t(\"fealiyyet\")}\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M3.72407 6.64131C3.94596 6.41942 4.29318 6.39925 4.53786 6.5808L4.60796 6.64131L9.99935 12.0324L15.3907 6.64131C15.6126 6.41942 15.9598 6.39925 16.2045 6.58079L16.2746 6.64131C16.4965 6.8632 16.5167 7.21042 16.3351 7.45509L16.2746 7.52519L10.4413 13.3585C10.2194 13.5804 9.87218 13.6006 9.62751 13.419L9.55741 13.3585L3.72407 7.52519C3.48 7.28112 3.48 6.88539 3.72407 6.64131Z\"\r\n                          fill=\"black\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                    <div className=\"hideElem\">\r\n                      {vacancyFilter.isLoading === false &&\r\n                        vacancyFilter.data !== undefined &&\r\n                        vacancyFilter.data.occupations.map((item) => (\r\n                          <p className=\"parent__checkBox\" key={item.id}>\r\n                            <label htmlFor={item.title}>\r\n                              <input\r\n                                id={item.title}\r\n                                type=\"checkbox\"\r\n                                onClick={(e) => {\r\n                                  if (e.target.checked === true) {\r\n                                    setParams((prev) => ({\r\n                                      ...prev,\r\n                                      occupation: [\r\n                                        ...params.occupation,\r\n                                        item.id,\r\n                                      ],\r\n                                    }));\r\n                                  } else {\r\n                                    const index = params.occupation.indexOf(\r\n                                      item.id,\r\n                                      0\r\n                                    );\r\n                                    if (index >= -1) {\r\n                                      params.occupation.splice(index, 1);\r\n                                      setParams(params);\r\n                                      refetch();\r\n                                    }\r\n                                  }\r\n                                }}\r\n                              />\r\n                              {item.title}\r\n                            </label>\r\n                          </p>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"vacancies__wrapper d-flex justify-content-center flex-column\">\r\n            {isLoading === false &&\r\n              data !== undefined &&\r\n              data.data.map((item) => (\r\n                <div\r\n                  className=\"vacancies__wrapper__block d-flex justify-content-around flex-row\"\r\n                  key={item.id}\r\n                >\r\n                  <div className=\"vacancies__wrapper__block--position-info\">\r\n                    <h3>{item.title}</h3>\r\n                    <p>{item.company}</p>\r\n                    <p>\r\n                      <span>\r\n                        <img\r\n                          src={require(\"../assets/images/mapIcon.svg\").default}\r\n                          alt=\"mapIcon\"\r\n                        />\r\n                      </span>{\" \"}\r\n                      {item.location}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"vacancies__wrapper__block--deadline-date d-flex justify-content-center align-items-center\">\r\n                    <div>\r\n                      <p>\r\n                        <span>\r\n                          <img\r\n                            src={\r\n                              require(\"../assets/images/calendar.svg\").default\r\n                            }\r\n                            alt=\"mapIcon\"\r\n                          />\r\n                        </span>\r\n                        {t(\"sonmuraciettarixi\")}:{\" \"}\r\n                        <span className=\"vacancies__wrapper__block--deadline-date--date\">\r\n                          {item.expired_at}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"vacancies__wrapper__block--more-info d-flex align-items-end\">\r\n                    <p>\r\n                      <Link to={`/vacancies/${item.slug}`}>\r\n                        {t(\"dahaetraflibax\")}\r\n                        <span>\r\n                          <img\r\n                            src={require(\"../assets/images/arrow.svg\").default}\r\n                            alt=\"mapIcon\"\r\n                          />\r\n                        </span>\r\n                      </Link>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center news__pagination\">\r\n          {totalRef.current !== null &&\r\n            totalRef.current.total > totalRef.current.per_page && (\r\n              <CustomPagination\r\n                defaultCurrent={1}\r\n                total={totalRef.current.total}\r\n                pageSize={totalRef.current.per_page}\r\n                setPage={setPage}\r\n              />\r\n            )}\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Vacancies;\r\n"],"sourceRoot":""}