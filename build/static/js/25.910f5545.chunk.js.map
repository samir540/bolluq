{"version":3,"sources":["components/title/title.js","pages/productDetails.js"],"names":["Title","title","className","React","memo","ProductDetails","slug","useParams","t","useTranslation","useQuery","undefined","productDetail","refetchOnWindowFocus","data","isLoading","mainRef","useRef","thumbsRef","useEffect","current","splide","sync","options","type","perPage","arrows","pagination","ref","length","images","map","item","src","image","id","rewind","isNavigation","fixedWidth","fixedHeight","gap","cover","weight","packaging","code"],"mappings":"mGAAA,2BAGMA,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,qBAAKC,UAAU,aAAf,SACE,6BAAKD,OASIE,QAAMC,KAAKJ,I,uDCf1B,4FAwGeK,UA9FQ,WACrB,IAAQC,EAASC,cAATD,KACDE,EAAKC,cAALD,EAEP,EAA4BE,mBAC1B,CAAC,qBAA0BC,IAATL,EAAqBA,EAAO,IAC9CM,IACA,CACEC,sBAAsB,IAJlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAQRC,EAAUC,mBACVC,EAAYD,mBAElBE,qBAAU,WACJH,EAAQI,SAAWF,EAAUE,SAAWF,EAAUE,QAAQC,QAC5DL,EAAQI,QAAQE,KAAKJ,EAAUE,QAAQC,UAExC,IAqBH,OACE,qCACE,cAAC,IAAD,CAAOpB,MAAOO,EAAE,eAChB,qBAAKN,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,sBAAKA,UAAU,0CAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,cAAC,IAAD,CAAQqB,QA1BA,CAClBC,KAAM,OACNC,QAAS,EACTC,QAAQ,EACRC,YAAY,GAsB4BC,IAAKZ,EAAnC,UACiB,IAAdD,QACUJ,IAATG,GACgB,IAAhBA,EAAKe,QACLf,EAAKA,KAAKgB,OAAOC,KAAI,SAACC,GAAD,OACnB,cAAC,IAAD,UACE,qBAAKC,IAAKD,EAAKE,SADCF,EAAKG,SAK7B,cAAC,IAAD,CAAQZ,QA7BE,CACpBC,KAAM,QACNY,QAAQ,EACRC,cAAc,EACdX,QAAQ,EACRC,YAAY,EACZW,WAAY,yBACZC,YAAa,GACbC,IAAK,OACLC,OAAO,GAoBmCb,IAAKV,EAArC,UACiB,IAAdH,QACUJ,IAATG,GACgB,IAAhBA,EAAKe,QACLf,EAAKA,KAAKgB,OAAOC,KAAI,SAACC,GAAD,OACnB,cAAC,IAAD,UACE,qBAAKC,IAAKD,EAAKE,SADCF,EAAKG,YAM/B,qBAAKjC,UAAU,8DAAf,UACiB,IAAda,QAAgCJ,IAATG,GAAsC,IAAhBA,EAAKe,QACjD,qCACE,6BAAKf,EAAKA,KAAKb,QACf,sBAAKC,UAAU,oEAAf,UACE,gCACE,4BAAIM,EAAE,UACN,4BAAIA,EAAE,iBACN,4BAAIA,EAAE,YAER,sBAAKN,UAAU,GAAf,UACE,4BAAIY,EAAKA,KAAK4B,SACd,4BAAI5B,EAAKA,KAAK6B,YACd,4BAAI7B,EAAKA,KAAK8B","file":"static/js/25.910f5545.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <div className=\"layerTitle\">\r\n      <h1>{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default React.memo(Title);\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\r\nimport \"../assets/css/_productDetails.scss\";\r\nimport Title from \"../components/title/title\";\r\nimport { useQuery } from \"react-query\";\r\nimport { productDetail } from \"../queries/queries\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ProductDetails = () => {\r\n  const { slug } = useParams();\r\n  const {t} = useTranslation();\r\n\r\n  const { data, isLoading } = useQuery(\r\n    [\"productDetail\", slug !== undefined ? slug : \"\"],\r\n    productDetail,\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const mainRef = useRef();\r\n  const thumbsRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (mainRef.current && thumbsRef.current && thumbsRef.current.splide) {\r\n      mainRef.current.sync(thumbsRef.current.splide);\r\n    }\r\n  }, []);\r\n\r\n  const mainOptions = {\r\n    type: \"loop\",\r\n    perPage: 1,\r\n    arrows: false,\r\n    pagination: false,\r\n  };\r\n\r\n  const thumbsOptions = {\r\n    type: \"slide\",\r\n    rewind: true,\r\n    isNavigation: true,\r\n    arrows: false,\r\n    pagination: false,\r\n    fixedWidth: \"calc((100% / 5) - 8px)\",\r\n    fixedHeight: 70,\r\n    gap: \"1rem\",\r\n    cover: true,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title title={t(\"mehsullar\")} />\r\n      <div className=\"productDetails\">\r\n        <Container>\r\n          <div className=\"productDetails__wrapper d-flex flex-row\">\r\n            <div className=\"productDetails__wrapper--slider\">\r\n              <Splide options={mainOptions} ref={mainRef}>\r\n                {isLoading === false &&\r\n                  data !== undefined &&\r\n                  data.length !== 0 &&\r\n                  data.data.images.map((item) => (\r\n                    <SplideSlide key={item.id}>\r\n                      <img src={item.image} />\r\n                    </SplideSlide>\r\n                  ))}\r\n              </Splide>\r\n              <Splide options={thumbsOptions} ref={thumbsRef}>\r\n                {isLoading === false &&\r\n                  data !== undefined &&\r\n                  data.length !== 0 &&\r\n                  data.data.images.map((item) => (\r\n                    <SplideSlide key={item.id}>\r\n                      <img src={item.image} />\r\n                    </SplideSlide>\r\n                  ))}\r\n              </Splide>\r\n            </div>\r\n            <div className=\"productDetails__wrapper--product-details d-flex flex-column\">\r\n              {isLoading === false && data !== undefined && data.length !== 0 && (\r\n                <>\r\n                  <h4>{data.data.title}</h4>\r\n                  <div className=\"productDetails__wrapper--product-details--content d-flex flex-row\">\r\n                    <div>\r\n                      <p>{t(\"ceki\")}</p>\r\n                      <p>{t(\"qablasdirma\")}</p>\r\n                      <p>{t(\"kod\")}</p>\r\n                    </div>\r\n                    <div className=\"\">\r\n                      <p>{data.data.weight}</p>\r\n                      <p>{data.data.packaging}</p>\r\n                      <p>{data.data.code}</p>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n"],"sourceRoot":""}